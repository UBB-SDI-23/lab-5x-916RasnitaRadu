{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductComponent = class ProductComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.pageSize = 10;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  getProducts() {\n    this.productService.getAllProducts(this.currentPage, 10).subscribe(response => {\n      this.products = response.content;\n      this.totalPages = response.totalPages;\n    });\n  }\n  onOpenModal(product, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats') {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n  onAddProduct(addForm) {\n    document.getElementById('add-product-form').click();\n    this.productService.addProduct(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n      addForm.reset();\n    });\n  }\n  onUpdateProduct(product) {\n    this.productService.updateProduct(product).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  onDeleteProduct(productId) {\n    this.productService.deleteProduct(productId).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  filterProducts(price) {\n    this.productService.filterProductsByPrice(price).subscribe(response => {\n      this.products = response;\n      if (response.length === 0 || !price) {\n        this.getProducts();\n      }\n    });\n  }\n  getStatisticalRep() {\n    this.productService.getStatisticalReportProduct().subscribe(response => {\n      this.stats = response.sort((a, b) => a.likes - b.likes);\n      console.log(this.stats);\n    });\n  }\n  sortProductsByPrice() {\n    this.products = this.products.sort((a, b) => a.price - b.price);\n  }\n  changePage(pageNumber) {\n    pageNumber = Math.max(pageNumber, 0);\n    pageNumber = Math.min(pageNumber, this.totalPages - 1);\n    this.currentPage = pageNumber;\n    this.getProducts();\n  }\n};\nProductComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})], ProductComponent);\nexport { ProductComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductComponent","constructor","productService","getProducts","getAllProducts","currentPage","subscribe","response","products","content","totalPages","onOpenModal","product","mode","container","document","getElementById","button","createElement","type","style","display","setAttribute","deleteProduct","editProduct","appendChild","click","onAddProduct","addForm","addProduct","value","console","log","reset","onUpdateProduct","updateProduct","onDeleteProduct","productId","filterProducts","price","filterProductsByPrice","length","getStatisticalRep","getStatisticalReportProduct","stats","sort","a","b","likes","sortProductsByPrice","changePage","pageNumber","Math","max","min","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\components\\products\\product.component.ts"],"sourcesContent":["import { Component} from '@angular/core';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/model/product';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-products',\r\n    templateUrl: './product.component.html',\r\n    styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent {\r\n    pageSize : number = 10;\r\n    currentPage: number = 0;\r\n    totalPages : number = 0;\r\n    public products : Product[];\r\n    public editProduct : Product;\r\n    public deleteProduct : Product;\r\n    public stats :{id : number, name: string, likes  : number }[];\r\n\r\n    constructor (\r\n        private productService : ProductService,\r\n    ) {}\r\n\r\n    public getProducts() : void {\r\n        this.productService.getAllProducts(this.currentPage, 10).subscribe(\r\n          response => {\r\n            this.products = response.content;\r\n            this.totalPages = response.totalPages;\r\n          },\r\n        );\r\n      }\r\n    \r\n      public onOpenModal(product: Product, mode : string) : void {\r\n        const container = document.getElementById('main-container');\r\n        const button = document.createElement('button');\r\n        button.type = 'button';\r\n        button.style.display = 'none';\r\n        button.setAttribute('data-toggle', 'modal');\r\n        if (mode === 'add') {\r\n          button.setAttribute('data-target', '#addProductModal');\r\n        }\r\n        if (mode === 'delete') {\r\n          this.deleteProduct = product;\r\n          button.setAttribute('data-target', '#deleteProductModal');\r\n        }\r\n        if (mode === 'edit') {\r\n          this.editProduct = product;\r\n          button.setAttribute('data-target', '#updateProductModal');\r\n        }\r\n        if (mode === 'stats')\r\n        {\r\n          button.setAttribute('data-target', '#statisticalReportModal');\r\n        }\r\n        container.appendChild(button);\r\n        button.click();\r\n      }\r\n    \r\n      public onAddProduct(addForm : NgForm) : void {\r\n        document.getElementById('add-product-form').click();\r\n        this.productService.addProduct(addForm.value).subscribe(\r\n          (response : Product) => {\r\n            console.log(response);\r\n            this.getProducts();\r\n            addForm.reset();\r\n          },\r\n    \r\n          );\r\n      }\r\n    \r\n      public onUpdateProduct(product : Product) : void {\r\n        this.productService.updateProduct(product).subscribe(\r\n          (response : Product) => {\r\n            console.log(response);\r\n            this.getProducts();\r\n          }\r\n        );\r\n      }\r\n    \r\n      public onDeleteProduct(productId : number) : void {\r\n        this.productService.deleteProduct(productId).subscribe(\r\n          (response : void) => {\r\n            console.log(response);\r\n            this.getProducts();\r\n          }\r\n        );\r\n      }\r\n \r\n      public filterProducts(price : number) : void {\r\n        this.productService.filterProductsByPrice(price).subscribe(\r\n          (response : Product[]) => {\r\n            this.products = response;\r\n            if (response.length === 0 || !price) {\r\n              this.getProducts();\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      public getStatisticalRep() : void {\r\n        this.productService.getStatisticalReportProduct().subscribe(\r\n          (response) => {\r\n            this.stats = response.sort((a, b) => a.likes - b.likes);\r\n            console.log(this.stats)\r\n          }\r\n        );\r\n      }\r\n\r\n      public sortProductsByPrice() : void {\r\n        this.products = this.products.sort((a, b) => a.price - b.price);\r\n      }\r\n\r\n      public changePage(pageNumber : number) : void {\r\n        pageNumber = Math.max(pageNumber, 0);\r\n        pageNumber = Math.min(pageNumber, this.totalPages - 1);\r\n        this.currentPage = pageNumber;\r\n        this.getProducts();\r\n      }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}