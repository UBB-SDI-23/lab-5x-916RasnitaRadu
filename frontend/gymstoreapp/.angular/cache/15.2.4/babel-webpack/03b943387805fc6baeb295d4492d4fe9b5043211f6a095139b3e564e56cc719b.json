{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/customer.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\";\nexport class CustomerComponent {\n  constructor(customerService, router, activatedRoute) {\n    this.customerService = customerService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.currentPage = 1;\n    this.totalPages = 0;\n    this.statsCurrentPage = 1;\n    this.statsTotalPages = 0;\n  }\n  ngOnInit() {\n    this.getCustomers();\n  }\n  getCustomers() {\n    this.customerService.getAllCustomers(this.currentPage, 10).subscribe(response => {\n      this.customers = response.content;\n      this.totalPages = response.totalPages;\n    });\n  }\n  onOpenModal(customer, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats') {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n  getStatisticalRep() {}\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 0,\n  vars: 0,\n  template: function CustomerComponent_Template(rf, ctx) {},\n  styles: [_c0, _c0]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,iBAAiB;EAU5BC,YAAoBC,eAAgC,EAAUC,MAAe,EAAUC,cAA+B;IAAlG,oBAAe,GAAfF,eAAe;IAA2B,WAAM,GAANC,MAAM;IAAmB,mBAAc,GAAdC,cAAc;IAL9F,gBAAW,GAAY,CAAC;IACxB,eAAU,GAAY,CAAC;IACvB,qBAAgB,GAAY,CAAC;IAC7B,oBAAe,GAAY,CAAC;EAEsF;EAEzHC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEOA,YAAY;IACjB,IAAI,CAACJ,eAAe,CAACK,eAAe,CAAC,IAAI,CAACC,WAAW,EAAE,EAAE,CAAC,CAACC,SAAS,CAClEC,QAAQ,IAAG;MACT,IAAI,CAACC,SAAS,GAAGD,QAAQ,CAACE,OAAO;MACjC,IAAI,CAACC,UAAU,GAAGH,QAAQ,CAACG,UAAU;IACvC,CAAC,CACF;EACH;EAEOC,WAAW,CAACC,QAAmB,EAAEC,IAAa;IACnD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAC3D,MAAMC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;IACtBF,MAAM,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IAC7BJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC;IAC3C,IAAIT,IAAI,KAAK,KAAK,EAAE;MAClBI,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,kBAAkB,CAAC;;IAExD,IAAIT,IAAI,KAAK,QAAQ,EAAE;MACrB,IAAI,CAACU,aAAa,GAAGC,OAAO;MAC5BP,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,qBAAqB,CAAC;;IAE3D,IAAIT,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI,CAACY,WAAW,GAAGD,OAAO;MAC1BP,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,qBAAqB,CAAC;;IAE3D,IAAIT,IAAI,KAAK,OAAO,EACpB;MACEI,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,yBAAyB,CAAC;;IAE/DR,SAAS,CAACY,WAAW,CAACT,MAAM,CAAC;IAC7BA,MAAM,CAACU,KAAK,EAAE;EAChB;EAEOC,iBAAiB,IAExB;;AApDW/B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAgC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["CustomerComponent","constructor","customerService","router","activatedRoute","ngOnInit","getCustomers","getAllCustomers","currentPage","subscribe","response","customers","content","totalPages","onOpenModal","customer","mode","container","document","getElementById","button","createElement","type","style","display","setAttribute","deleteProduct","product","editProduct","appendChild","click","getStatisticalRep","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\components\\customer\\customer.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer } from 'src/app/model/customer';\nimport { CustomerService } from 'src/app/services/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent {\n  public customers : Customer[];\n  public editCustomer : Customer;\n  public deleteCustomer : Customer;\n  public stats : {id : number, firstName: string,lastName: string, likes  : number }[];\n  public currentPage : number = 1;\n  public totalPages : number = 0;\n  public statsCurrentPage : number = 1;\n  public statsTotalPages : number = 0;\n\n  constructor(private customerService :CustomerService, private router : Router, private activatedRoute : ActivatedRoute) {}\n\n  ngOnInit() : void {\n    this.getCustomers();\n  }\n\n  public getCustomers() : void {\n    this.customerService.getAllCustomers(this.currentPage, 10).subscribe(\n      response => {\n        this.customers = response.content;\n        this.totalPages = response.totalPages;\n      }\n    );\n  }\n\n  public onOpenModal(customer : Customer, mode : string) : void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats')\n    {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n\n  public getStatisticalRep() : void {\n   \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}