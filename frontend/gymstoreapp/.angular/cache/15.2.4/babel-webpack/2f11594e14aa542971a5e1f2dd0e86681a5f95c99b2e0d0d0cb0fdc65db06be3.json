{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:80';\n  }\n  getAllCustomers(pageNumber, pageSize) {\n    return this.http.get(`${this.apiServerUrl}/customer/all` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n  }\n  getCustomer(customerId) {\n    return this.http.get(`${this.apiServerUrl}/customer/${customerId}`);\n  }\n  addCustomer(customer) {\n    return this.http.post(`${this.apiServerUrl}/customer/`, customer);\n  }\n  updateCustomer(customer) {\n    return this.http.put(`${this.apiServerUrl}/customer/`, customer);\n  }\n  deleteCustomer(customerId) {\n    return this.http.delete(`${this.apiServerUrl}/customer/${customerId}`);\n  }\n  getStatisticalReportCustomer(pageNumber, pageSize) {\n    return this.http.get(`${this.apiServerUrl}/review/statCust` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAGxBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFhB,iBAAY,GAAG,qBAAqB;EAEH;EAElCC,eAAe,CAACC,UAAkB,EAAEC,QAAiB;IACxD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAA2B,GAAG,IAAI,CAACC,YAAY,eAAe,GAAG,eAAeH,UAAU,EAAE,GAAG,aAAa,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC/I;EAEOG,WAAW,CAACC,UAAmB;IACpC,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACC,YAAY,aAAaE,UAAU,EAAE,CAAC;EAC/E;EAEOC,WAAW,CAACC,QAAmB;IACpC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,GAAG,IAAI,CAACL,YAAY,YAAY,EAAEI,QAAQ,CAAC;EAC7E;EAEOE,cAAc,CAACF,QAAmB;IACvC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACP,YAAY,YAAY,EAAEI,QAAQ,CAAC;EAC5E;EAEOI,cAAc,CAACN,UAAmB;IACvC,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACT,YAAY,aAAaE,UAAU,EAAE,CAAC;EAC9E;EAEOQ,4BAA4B,CAACb,UAAmB,EAAEC,QAAgB;IACvE,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAuF,GAAG,IAAI,CAACC,YAAY,kBAAkB,GAAG,eAAeH,UAAU,EAAE,GAAG,aAAa,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC9M;;AA3BOL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;EAAAmB,YADF;AAAM","names":["CustomerService","constructor","http","getAllCustomers","pageNumber","pageSize","get","apiServerUrl","getCustomer","customerId","addCustomer","customer","post","updateCustomer","put","deleteCustomer","delete","getStatisticalReportCustomer","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\services\\customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericPageDTO } from '../model/genericPageDTO';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { Customer } from '../model/customer';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class CustomerService {\r\n    private apiServerUrl = 'http://localhost:80'\r\n\r\n    constructor(private http : HttpClient) { }\r\n\r\n    public getAllCustomers(pageNumber: number, pageSize : number): Observable<GenericPageDTO<Customer>> {\r\n        return this.http.get<GenericPageDTO<Customer>>(`${this.apiServerUrl}/customer/all` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\r\n      }\r\n    \r\n      public getCustomer(customerId : number): Observable<Customer> {\r\n        return this.http.get<Customer>(`${this.apiServerUrl}/customer/${customerId}`);\r\n      }\r\n    \r\n      public addCustomer(customer : Customer): Observable<Customer> {\r\n        return this.http.post<Customer>(`${this.apiServerUrl}/customer/`, customer);\r\n      }\r\n    \r\n      public updateCustomer(customer : Customer ): Observable<Customer> {\r\n        return this.http.put<Customer>(`${this.apiServerUrl}/customer/`, customer);\r\n      }\r\n    \r\n      public deleteCustomer(customerId : number): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiServerUrl}/customer/${customerId}`);\r\n      }\r\n\r\n      public getStatisticalReportCustomer(pageNumber : number, pageSize :number) : Observable<GenericPageDTO<{id : number, firstName: string,lastName : string, likes  : number }>> {\r\n        return this.http.get<GenericPageDTO<{id : number, firstName: string,lastName : string, likes  : number }>>(`${this.apiServerUrl}/review/statCust` + `?pageNumber=${pageNumber}`+  `&pageSize=${[pageSize]}`);\r\n      }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}