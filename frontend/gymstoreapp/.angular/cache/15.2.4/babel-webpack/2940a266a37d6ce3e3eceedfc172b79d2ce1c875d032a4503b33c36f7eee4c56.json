{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AbstractPageContainerComponent {\n  constructor(router, activatedRoute) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.pageSize = 10;\n    this.pageNumber = 0;\n    this.totalPages = 0;\n    this.currentPage = this.pageNumber;\n    this.currentSize = this.pageSize;\n  }\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      if ('pageSize' in params) {\n        this.pageSize = parseInt(params['pageSize']);\n      }\n      if ('pageNumber' in params) {\n        this.pageNumber = parseInt(params['pageNumber']);\n      }\n      if (this.pageSize < 4) {\n        this.pageSize = 4;\n      }\n      if (this.pageSize > 10) {\n        this.pageSize = 10;\n      }\n      this.pageUpdate();\n    });\n  }\n  pageUpdate() {\n    ;\n  }\n  setPageSize(pageSize) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: {\n        'pageSize': pageSize,\n        'pageNumber': this.pageNumber\n      }\n    });\n  }\n  setPageNumber(pageNumber) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: {\n        'pageSize': this.pageSize,\n        'pageNumber': pageNumber\n      }\n    });\n  }\n}\nAbstractPageContainerComponent.ɵfac = function AbstractPageContainerComponent_Factory(t) {\n  return new (t || AbstractPageContainerComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nAbstractPageContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AbstractPageContainerComponent,\n  selectors: [[\"app-abstract-page-container\"]],\n  decls: 2,\n  vars: 0,\n  template: function AbstractPageContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"abstract-page-container works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,8BAA8B;EAOzCC,YACYC,MAAa,EACbC,cAA6B;IAD7B,WAAM,GAAND,MAAM;IACN,mBAAc,GAAdC,cAAc;IAR1B,aAAQ,GAAY,EAAE;IACtB,eAAU,GAAW,CAAC;IACtB,eAAU,GAAW,CAAC;IACtB,gBAAW,GAAW,IAAI,CAACC,UAAU;IACrC,gBAAW,GAAW,IAAI,CAACC,QAAQ;EAKhC;EAEHC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,WAAW,CAACC,SAAS,CACvCC,MAAM,IAAG;MACP,IAAG,UAAU,IAAIA,MAAM,EAAE;QACvB,IAAI,CAACJ,QAAQ,GAAGK,QAAQ,CAACD,MAAM,CAAC,UAAU,CAAC,CAAC;;MAE9C,IAAG,YAAY,IAAIA,MAAM,EAAE;QACzB,IAAI,CAACL,UAAU,GAAGM,QAAQ,CAACD,MAAM,CAAC,YAAY,CAAC,CAAC;;MAElD,IAAG,IAAI,CAACJ,QAAQ,GAAG,CAAC,EAAE;QACpB,IAAI,CAACA,QAAQ,GAAG,CAAC;;MAEnB,IAAG,IAAI,CAACA,QAAQ,GAAG,EAAE,EAAE;QACrB,IAAI,CAACA,QAAQ,GAAG,EAAE;;MAEpB,IAAI,CAACM,UAAU,EAAE;IAEnB,CAAC,CACF;EACH;EAEOA,UAAU;IAAW;EAAC;EAEtBC,WAAW,CAACP,QAAgB;IACjC,IAAI,CAACH,MAAM,CAACW,QAAQ,CAClB,EAAE,EACF;MACEC,UAAU,EAAE,IAAI,CAACX,cAAc;MAC/BI,WAAW,EAAE;QAAC,UAAU,EAAEF,QAAQ;QAAE,YAAY,EAAE,IAAI,CAACD;MAAU;KAClE,CACF;EACH;EAEOW,aAAa,CAACX,UAAkB;IACrC,IAAI,CAACF,MAAM,CAACW,QAAQ,CAClB,EAAE,EACF;MACEC,UAAU,EAAE,IAAI,CAACX,cAAc;MAC/BI,WAAW,EAAE;QAAC,UAAU,EAAE,IAAI,CAACF,QAAQ;QAAE,YAAY,EAAED;MAAU;KAClE,CACF;EACH;;AArDWJ,8BAA8B;mBAA9BA,8BAA8B;AAAA;AAA9BA,8BAA8B;QAA9BA,8BAA8B;EAAAgB;EAAAC;EAAAC;EAAAC;IAAA;MCR3CC,yBAAG;MAAAA,8CAA8B;MAAAA,iBAAI","names":["AbstractPageContainerComponent","constructor","router","activatedRoute","pageNumber","pageSize","ngOnInit","queryParams","subscribe","params","parseInt","pageUpdate","setPageSize","navigate","relativeTo","setPageNumber","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\components\\abstract\\abstract-page-container\\abstract-page-container.component.ts","C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\components\\abstract\\abstract-page-container\\abstract-page-container.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-abstract-page-container',\n  templateUrl: './abstract-page-container.component.html',\n  styleUrls: ['./abstract-page-container.component.css']\n})\nexport class AbstractPageContainerComponent implements OnInit{\n  pageSize : number = 10;\n  pageNumber: number = 0;\n  totalPages: number = 0;\n  currentPage: number = this.pageNumber;\n  currentSize: number = this.pageSize;\n\n  constructor(\n    protected router:Router,\n    protected activatedRoute:ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(\n      params => {\n        if('pageSize' in params) {\n          this.pageSize = parseInt(params['pageSize']);\n        }\n        if('pageNumber' in params) {\n          this.pageNumber = parseInt(params['pageNumber']);\n        }\n        if(this.pageSize < 4) {\n          this.pageSize = 4;\n        }\n        if(this.pageSize > 10) {\n          this.pageSize = 10;\n        }\n        this.pageUpdate();\n      \n      }\n    )\n  }\n\n  public pageUpdate() : void {;}\n\n  public setPageSize(pageSize: number) : void {\n    this.router.navigate(\n      [],\n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {'pageSize': pageSize, 'pageNumber': this.pageNumber}\n      }\n    );\n  }\n\n  public setPageNumber(pageNumber: number): void {\n    this.router.navigate(\n      [],\n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {'pageSize': this.pageSize, 'pageNumber': pageNumber}\n      }\n    )\n  }\n}\n","<p>abstract-page-container works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}