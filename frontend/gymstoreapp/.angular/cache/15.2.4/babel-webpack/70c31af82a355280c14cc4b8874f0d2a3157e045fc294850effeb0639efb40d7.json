{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet PaginationComponent = class PaginationComponent {\n  constructor() {\n    this.pageChangeEvent = new EventEmitter();\n    this.pageSizeEvent = new EventEmitter();\n    this.totalPages = 0;\n    this.currentPage = 0;\n    this.pageNumber = 0;\n    this.pageSize = 0;\n  }\n  setPageNumber(page) {\n    page = Math.max(page, 0);\n    page = Math.min(page, this.totalPages - 1);\n    this.pageNumber = page;\n    this.pageChangeEvent.emit(page);\n  }\n  setPageSize(pageSize) {\n    this.pageSize = pageSize;\n    this.pageSizeEvent.emit(pageSize);\n  }\n  getDisplayedPages() {\n    let answer = [];\n    for (let i = 0; i < Math.min(5, this.totalPages); i++) {\n      answer.push(i);\n    }\n    for (let i = Math.max(0, this.totalPages - 5); i < this.totalPages; i++) {\n      answer.push(i);\n    }\n    for (let i = 0; i <= 3; i++) {\n      if (this.pageNumber - i >= 0) {\n        answer.push(this.pageNumber - i);\n      }\n      if (this.pageNumber + i < this.totalPages) {\n        answer.push(this.pageNumber + i);\n      }\n    }\n    answer = answer.sort((n1, n2) => n1 - n2);\n    answer = answer.filter((value, index, array) => array.indexOf(value) == index);\n    return answer;\n  }\n};\n__decorate([Output()], PaginationComponent.prototype, \"pageChangeEvent\", void 0);\n__decorate([Output()], PaginationComponent.prototype, \"pageSizeEvent\", void 0);\n__decorate([Input()], PaginationComponent.prototype, \"totalPages\", void 0);\n__decorate([Input()], PaginationComponent.prototype, \"currentPage\", void 0);\n__decorate([Input()], PaginationComponent.prototype, \"pageNumber\", void 0);\n__decorate([Input()], PaginationComponent.prototype, \"pageSize\", void 0);\nPaginationComponent = __decorate([Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})], PaginationComponent);\nexport { PaginationComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAO/D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC;IACK,oBAAe,GAAG,IAAIJ,YAAY,EAAU;IAC5C,kBAAa,GAAG,IAAIA,YAAY,EAAU;IAC3C,eAAU,GAAY,CAAC;IACvB,gBAAW,GAAY,CAAC;IACxB,eAAU,GAAY,CAAC;IACvB,aAAQ,GAAY,CAAC;EAyChC;EAvCEK,aAAa,CAACC,IAAa;IACzBA,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACF,IAAI,EAAE,CAAC,CAAC;IACxBA,IAAI,GAAGC,IAAI,CAACE,GAAG,CAACH,IAAI,EAAE,IAAI,CAACI,UAAU,GAAG,CAAC,CAAC;IAC1C,IAAI,CAACC,UAAU,GAAGL,IAAI;IACtB,IAAI,CAACM,eAAe,CAACC,IAAI,CAACP,IAAI,CAAC;EACjC;EAEAQ,WAAW,CAACC,QAAgB;IAC1B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,CAACH,IAAI,CAACE,QAAQ,CAAC;EACnC;EAEAE,iBAAiB;IACf,IAAIC,MAAM,GAAa,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACE,GAAG,CAAC,CAAC,EAAC,IAAI,CAACC,UAAU,CAAC,EAAES,CAAC,EAAE,EACpD;MACED,MAAM,CAACE,IAAI,CAACD,CAAC,CAAC;;IAGhB,KAAK,IAAIA,CAAC,GAAGZ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACE,UAAU,GAAE,CAAC,CAAC,EAACS,CAAC,GAAG,IAAI,CAACT,UAAU,EAAES,CAAC,EAAE,EACrE;MACED,MAAM,CAACE,IAAI,CAACD,CAAC,CAAC;;IAGhB,KAAK,IAAIA,CAAC,GAAE,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAI,IAAI,CAACR,UAAU,GAAGQ,CAAC,IAAI,CAAC,EAC5B;QACED,MAAM,CAACE,IAAI,CAAC,IAAI,CAACT,UAAU,GAAGQ,CAAC,CAAC;;MAElC,IAAI,IAAI,CAACR,UAAU,GAAGQ,CAAC,GAAG,IAAI,CAACT,UAAU,EAAE;QACzCQ,MAAM,CAACE,IAAI,CAAC,IAAI,CAACT,UAAU,GAAGQ,CAAC,CAAC;;;IAIpCD,MAAM,GAAGA,MAAM,CAACG,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAKD,EAAE,GAAGC,EAAE,CAAC;IACzCL,MAAM,GAAGA,MAAM,CAACM,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAKA,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAIC,KAAK,CAAC;IAE9E,OAAOR,MAAM;EACf;CACD;AA9CWW,YAAT3B,MAAM,EAAE,4DAA8C;AAC7C2B,YAAT3B,MAAM,EAAE,0DAA4C;AAC5C2B,YAAR5B,KAAK,EAAE,uDAAyB;AACxB4B,YAAR5B,KAAK,EAAE,wDAA0B;AACzB4B,YAAR5B,KAAK,EAAE,uDAAyB;AACxB4B,YAAR5B,KAAK,EAAE,qDAAuB;AANpBE,mBAAmB,eAL/BJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW7B,mBAAmB,CA+C/B;SA/CYA,mBAAmB","names":["Component","EventEmitter","Input","Output","PaginationComponent","constructor","setPageNumber","page","Math","max","min","totalPages","pageNumber","pageChangeEvent","emit","setPageSize","pageSize","pageSizeEvent","getDisplayedPages","answer","i","push","sort","n1","n2","filter","value","index","array","indexOf","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\components\\pagination\\pagination.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent {\n  @Output() pageChangeEvent = new EventEmitter<number>();\n  @Output() pageSizeEvent = new EventEmitter<number>();\n  @Input() totalPages : number = 0;\n  @Input() currentPage : number = 0;\n  @Input() pageNumber : number = 0;\n  @Input() pageSize : number = 0;\n  \n  setPageNumber(page : number) {\n    page = Math.max(page, 0);\n    page = Math.min(page, this.totalPages - 1);\n    this.pageNumber = page;\n    this.pageChangeEvent.emit(page);\n  }\n\n  setPageSize(pageSize: number) {\n    this.pageSize = pageSize;\n    this.pageSizeEvent.emit(pageSize);\n  }\n\n  getDisplayedPages() {\n    let answer: number[] = [];\n    for (let i = 0; i < Math.min(5,this.totalPages); i++)\n    {\n      answer.push(i);\n    }\n\n    for (let i = Math.max(0, this.totalPages -5);i < this.totalPages; i++)\n    {\n      answer.push(i);\n    }\n\n    for (let i =0; i <= 3; i++) {\n      if (this.pageNumber - i >= 0)\n      {\n        answer.push(this.pageNumber - i);\n      }\n      if (this.pageNumber + i < this.totalPages) {\n        answer.push(this.pageNumber + i);\n      }\n    }\n\n    answer = answer.sort((n1, n2) => n1 - n2);\n    answer = answer.filter((value, index, array) => array.indexOf(value) == index);\n\n    return answer;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}