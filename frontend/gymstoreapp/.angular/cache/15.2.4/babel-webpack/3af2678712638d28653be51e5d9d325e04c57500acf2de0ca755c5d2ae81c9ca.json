{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(productService) {\n    this.productService = productService;\n  }\n  ngOnInit() {\n    this.getProducts();\n  }\n  getProducts() {\n    this.productService.getAllProducts().subscribe(response => {\n      this.products = response;\n    });\n  }\n  onOpenModal(product, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats') {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n  onAddProduct(addForm) {\n    document.getElementById('add-product-form').click();\n    this.productService.addProduct(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n      addForm.reset();\n    });\n  }\n  onUpdateProduct(product) {\n    this.productService.updateProduct(product).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  onDeleteProduct(productId) {\n    this.productService.deleteProduct(productId).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  filterProducts(price) {\n    this.productService.filterProductsByPrice(price).subscribe(response => {\n      this.products = response;\n      if (response.length === 0 || !price) {\n        this.getProducts();\n      }\n    });\n  }\n  getStatisticalRep() {\n    this.productService.getStatisticalReportProduct().subscribe(response => {\n      this.stats = response.sort((a, b) => a.likes - b.likes);\n      console.log('hasdas', this.stats);\n    });\n  }\n  sortProductsByPrice() {\n    this.products = this.products.sort((a, b) => a.price - b.price);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","productService","ngOnInit","getProducts","getAllProducts","subscribe","response","products","onOpenModal","product","mode","container","document","getElementById","button","createElement","type","style","display","setAttribute","deleteProduct","editProduct","appendChild","click","onAddProduct","addForm","addProduct","value","console","log","reset","onUpdateProduct","updateProduct","onDeleteProduct","productId","filterProducts","price","filterProductsByPrice","length","getStatisticalRep","getStatisticalReportProduct","stats","sort","a","b","likes","sortProductsByPrice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Product } from './product';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ProductService } from './product.service';\nimport { NgForm } from '@angular/forms';\nimport { Entry } from './Entry';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  public products : Product[];\n  public editProduct : Product;\n  public deleteProduct : Product;\n  public stats :{id : number, name: string, likes  : number }[];\n\n  constructor(private productService : ProductService) { }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  public getProducts() : void {\n    this.productService.getAllProducts().subscribe(\n      (response : Product[]) => {\n        this.products = response;\n      },\n      // (error: HttpErrorResponse) => {\n      //   alert(error.message);\n      // }\n    );\n  }\n\n  public onOpenModal(product: Product, mode : string) : void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats')\n    {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n\n  public onAddProduct(addForm : NgForm) : void {\n    document.getElementById('add-product-form').click();\n    this.productService.addProduct(addForm.value).subscribe(\n      (response : Product) => {\n        console.log(response);\n        this.getProducts();\n        addForm.reset();\n      },\n      // (error : HttpErrorResponse) => {\n      //   alert(error.message);\n      //   addForm.reset();\n      // }\n      );\n  }\n\n  public onUpdateProduct(product : Product) : void {\n    this.productService.updateProduct(product).subscribe(\n      (response : Product) => {\n        console.log(response);\n        this.getProducts();\n      }\n    );\n  }\n\n  public onDeleteProduct(productId : number) : void {\n    this.productService.deleteProduct(productId).subscribe(\n      (response : void) => {\n        console.log(response);\n        this.getProducts();\n      }\n    );\n  }\n\n  public filterProducts(price : number) : void {\n    this.productService.filterProductsByPrice(price).subscribe(\n      (response : Product[]) => {\n        this.products = response;\n        if (response.length === 0 || !price) {\n          this.getProducts();\n        }\n      }\n    );\n  }\n\n  public getStatisticalRep() : void {\n    this.productService.getStatisticalReportProduct().subscribe(\n      (response) => {\n        this.stats = response.sort((a, b) => a.likes - b.likes);\n        console.log('hasdas', this.stats)\n      }\n    );\n  }\n\n  public sortProductsByPrice() : void {\n    this.products = this.products.sort((a, b) => a.price - b.price);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}