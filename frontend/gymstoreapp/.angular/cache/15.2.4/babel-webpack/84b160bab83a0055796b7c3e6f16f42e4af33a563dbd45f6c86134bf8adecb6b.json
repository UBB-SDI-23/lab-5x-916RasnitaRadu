{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/product.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = \".paginations[_ngcontent-%COMP%] {\\r\\n    color: #707070;\\r\\n    border: 1px solid;\\r\\n    border-radius: 100px;\\r\\n    width: 100px;\\r\\n }\\r\\n\\r\\n.pg[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsWUFBWTtDQUNmOztBQUVEO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnBhZ2luYXRpb25zIHtcclxuICAgIGNvbG9yOiAjNzA3MDcwO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcclxuICAgIHdpZHRoOiAxMDBweDtcclxuIH1cclxuXHJcbi5wZyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\";\nexport class AppComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.currentPage = 1;\n    this.totalPages = 0;\n  }\n  ngOnInit() {\n    this.getProducts();\n  }\n  getProducts() {\n    this.productService.getAllProducts(this.currentPage, 10).subscribe(response => {\n      this.products = response.content;\n      this.totalPages = response.totalPages;\n    });\n  }\n  onOpenModal(product, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats') {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n  onAddProduct(addForm) {\n    document.getElementById('add-product-form').click();\n    this.productService.addProduct(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n      addForm.reset();\n    });\n  }\n  onUpdateProduct(product) {\n    this.productService.updateProduct(product).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  onDeleteProduct(productId) {\n    this.productService.deleteProduct(productId).subscribe(response => {\n      console.log(response);\n      this.getProducts();\n    });\n  }\n  filterProducts(price) {\n    this.productService.filterProductsByPrice(price).subscribe(response => {\n      this.products = response;\n      if (response.length === 0 || !price) {\n        this.getProducts();\n      }\n    });\n  }\n  getStatisticalRep() {\n    this.productService.getStatisticalReportProduct().subscribe(response => {\n      this.stats = response.sort((a, b) => a.likes - b.likes);\n      console.log('hasdas', this.stats);\n    });\n  }\n  sortProductsByPrice() {\n    this.products = this.products.sort((a, b) => a.price - b.price);\n  }\n  changePage(pageNumber) {\n    pageNumber = Math.max(pageNumber, 0);\n    pageNumber = Math.min(pageNumber, this.totalPages - 1);\n    this.currentPage = pageNumber;\n    this.getProducts();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 17,\n  vars: 0,\n  consts: [[\"href\", \"https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\", \"rel\", \"stylesheet\"], [1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"btn-group\"], [\"type\", \"button\", \"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"btn\", \"btn-secondary\", \"btn-lg\", \"dropdown-toggle\"], [1, \"dropdown-menu\"], [\"routerLink\", \"product\", 1, \"dropdown-item\"], [\"href\", \"#\", 1, \"dropdown-item\"], [1, \"dropdown-divider\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarColor02\", \"aria-controls\", \"navbarColor02\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0);\n      i0.ɵɵelementStart(1, \"nav\", 1)(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵtext(4, \" Select \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"a\", 5);\n      i0.ɵɵtext(7, \"Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \"Customers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 6);\n      i0.ɵɵtext(11, \"Reviews\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"div\", 7);\n      i0.ɵɵelementStart(13, \"a\", 6);\n      i0.ɵɵtext(14, \"Separated link\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵelement(16, \"span\", 9);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [_c0, _c0]\n});","map":{"version":3,"mappings":"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","names":["AppComponent","constructor","productService","ngOnInit","getProducts","getAllProducts","currentPage","subscribe","response","products","content","totalPages","onOpenModal","product","mode","container","document","getElementById","button","createElement","type","style","display","setAttribute","deleteProduct","editProduct","appendChild","click","onAddProduct","addForm","addProduct","value","console","log","reset","onUpdateProduct","updateProduct","onDeleteProduct","productId","filterProducts","price","filterProductsByPrice","length","getStatisticalRep","getStatisticalReportProduct","stats","sort","a","b","likes","sortProductsByPrice","changePage","pageNumber","Math","max","min","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\app.component.ts","C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Product } from './model/product';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ProductService } from './services/product.service';\nimport { NgForm } from '@angular/forms';\nimport { Entry } from './model/Entry';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  public products : Product[];\n  public editProduct : Product;\n  public deleteProduct : Product;\n  public stats :{id : number, name: string, likes  : number }[];\n  public currentPage : number = 1;\n  public totalPages : number = 0;\n\n  constructor(private productService : ProductService) { }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  public getProducts() : void {\n    this.productService.getAllProducts(this.currentPage, 10).subscribe(\n      response => {\n        this.products = response.content;\n        this.totalPages = response.totalPages;\n      },\n\n    );\n  }\n\n  public onOpenModal(product: Product, mode : string) : void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addProductModal');\n    }\n    if (mode === 'delete') {\n      this.deleteProduct = product;\n      button.setAttribute('data-target', '#deleteProductModal');\n    }\n    if (mode === 'edit') {\n      this.editProduct = product;\n      button.setAttribute('data-target', '#updateProductModal');\n    }\n    if (mode === 'stats')\n    {\n      button.setAttribute('data-target', '#statisticalReportModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n\n  public onAddProduct(addForm : NgForm) : void {\n    document.getElementById('add-product-form').click();\n    this.productService.addProduct(addForm.value).subscribe(\n      (response : Product) => {\n        console.log(response);\n        this.getProducts();\n        addForm.reset();\n      },\n\n      );\n  }\n\n  public onUpdateProduct(product : Product) : void {\n    this.productService.updateProduct(product).subscribe(\n      (response : Product) => {\n        console.log(response);\n        this.getProducts();\n      }\n    );\n  }\n\n  public onDeleteProduct(productId : number) : void {\n    this.productService.deleteProduct(productId).subscribe(\n      (response : void) => {\n        console.log(response);\n        this.getProducts();\n      }\n    );\n  }\n\n  public filterProducts(price : number) : void {\n    this.productService.filterProductsByPrice(price).subscribe(\n      (response : Product[]) => {\n        this.products = response;\n        if (response.length === 0 || !price) {\n          this.getProducts();\n        }\n      }\n    );\n  }\n\n  public getStatisticalRep() : void {\n    this.productService.getStatisticalReportProduct().subscribe(\n      (response) => {\n        this.stats = response.sort((a, b) => a.likes - b.likes);\n        console.log('hasdas', this.stats)\n      }\n    );\n  }\n\n  public sortProductsByPrice() : void {\n    this.products = this.products.sort((a, b) => a.price - b.price);\n  }\n\n  public changePage(pageNumber : number) : void {\n    pageNumber = Math.max(pageNumber, 0);\n    pageNumber = Math.min(pageNumber, this.totalPages - 1);\n    this.currentPage = pageNumber;\n    this.getProducts();\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n<link href=\"app.component.css\" rel=\"stylesheet\">\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n   <div class=\"btn-group\">\n      <button class=\"btn btn-secondary btn-lg dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n       Select\n      </button>\n      <div class=\"dropdown-menu\">\n         <a class=\"dropdown-item\" routerLink=\"product\">Products</a>\n         <a class=\"dropdown-item\" href=\"#\">Customers</a>\n         <a class=\"dropdown-item\" href=\"#\">Reviews</a>\n         <div class=\"dropdown-divider\"></div>\n         <a class=\"dropdown-item\" href=\"#\">Separated link</a>\n      </div>\n   </div>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n     <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n           <a class=\"nav-link\" (click)=\"onOpenModal(null, 'add')\" >Add Product <span class=\"sr-only\">(current)</span></a>\n        </li>\n\n        <li class=\"nav-item acitve\">\n            <a class=\"nav-link\" (click)=\"onOpenModal(null, 'stats');getStatisticalRep();\"> Get Statistical Report <span class=\"sr-only\">(current)</span></a>\n        </li>\n\n        <li class=\"nav-item acitve\">\n            <a class=\"nav-link\" (click)=\"sortProductsByPrice();\">Sort Products <span class=\"sr-only\">(current)</span></a>\n        </li>\n     </ul>\n     <form class=\"form-inline my-2 my-lg-0\">\n        <input type=\"search\" (ngModelChange)=\"filterProducts(key.value)\" #key=\"ngModel\" ngModel\n        name=\"key\" id=\"filterProducts\"class=\"form-control mr-sm-2\" placeholder=\"Filter products by price\" required>\n     </form>\n  </div>\n</nav>\n\n\n\n<div class=\"container\" id=\"main-container\">\n    <div class=\"row\">\n        <div *ngFor=\"let product of products\" class=\"col-md-6 col-xl-3\">\n            <div class=\"card m-b-30\">\n                <div class=\"card-body row\">\n\n                    <div class=\"col-6 card-title align-self-center mb-0\">\n                        <h5>{{product?.name}}</h5>\n                        <p class=\"m-0\">{{product?.category}}</p>\n                    </div>\n                </div>\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\"><i class=\"fa fa-envelope float-right\"></i>Price : {{product?.price}}</li>\n                    <li class=\"list-group-item\"><i class=\"fa fa-phone float-right\"></i>{{product?.description}}</li>\n                    <li class=\"list-group-item\"><i class=\"fa fa-phone float-right\"></i>Color : {{product?.color}}</li>\n                </ul>\n                <div class=\"card-body\">\n                    <div class=\"float-right btn-group btn-group-sm\">\n                        <a (click)=\"onOpenModal(product, 'edit')\" class=\"btn btn-primary tooltips\" data-placement=\"top\" data-toggle=\"tooltip\" data-original-title=\"Edit\"><i class=\"fa fa-pencil\"></i> </a>\n                        <a (click)=\"onOpenModal(product, 'delete')\" class=\"btn btn-secondary tooltips\" data-placement=\"top\" data-toggle=\"tooltip\" data-original-title=\"Delete\"><i class=\"fa fa-times\"></i></a>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        \n       \n        <div class=\"modal fade\" id=\"addProductModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addProductModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n               <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"addProductModalLabel\">Add Product</h5>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                  </button>\n               </div>\n               <div class=\"modal-body\">\n                  <form #addForm=\"ngForm\" (ngSubmit)=\"onAddProduct(addForm)\">\n                  <div class=\"form-group\">\n                     <label for=\"name\">Name</label>\n                     <input type=\"text\" ngModel name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Name\" required>\n                  </div>\n                  <div class=\"form-group\">\n                     <label for=\"category\">Category</label>\n                     <input type=\"text\" ngModel name=\"category\" class=\"form-control\" id=\"category\" placeholder=\"Category\" required>\n                  </div>\n                  <div class=\"form-group\">\n                     <label for=\"price\">Price</label>\n                     <input type=\"text\" ngModel name=\"price\" class=\"form-control\" id=\"price\" placeholder=\"Price\" required>\n                  </div>\n                  <div class=\"form-group\">\n                     <label for=\"description\">Description</label>\n                     <input type=\"text\" ngModel name=\"description\" class=\"form-control\" id=\"description\" placeholder=\"Description\" required>\n                  </div>\n                  <div class=\"form-group\">\n                     <label for=\"color\">Color</label>\n                     <input type=\"text\" ngModel name=\"color\" class=\"form-control\" id=\"color\" placeholder=\"Color\" required>\n                  </div>\n                  <div class=\"modal-footer\">\n                     <button type=\"button\" id=\"add-product-form\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                     <button [disabled]=\"addForm.invalid\" type=\"submit\" class=\"btn btn-primary\" >Save changes</button>\n                  </div>\n                  </form>\n               </div>\n            </div>\n          </div>\n          </div>\n\n         \n         <div class=\"modal fade\" id=\"updateProductModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"productEditModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n               <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                     <h5 class=\"modal-title\" id=\"updatProductModalLabel\">Edit Product {{editProduct?.name}}</h5>\n                     <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                     <span aria-hidden=\"true\">&times;</span>\n                     </button>\n                  </div>\n                  <div class=\"modal-body\">\n                     <form #editForm=\"ngForm\">\n                        <div class=\"form-group\">\n                           <label for=\"name\">Name</label>\n                           <input type=\"text\" ngModel=\"{{editProduct?.name}}\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Name\" required>\n                        </div>\n                        <input type=\"hidden\" ngModel=\"{{editProduct?.id}}\" name=\"id\" class=\"form-control\" id=\"id\" placeholder=\"Id\">\n                        <div class=\"form-group\">\n                           <label for=\"category\">Category</label>\n                           <input type=\"text\" ngModel=\"{{editProduct?.category}}\" name=\"category\" class=\"form-control\" id=\"category\" placeholder=\"Category\" required>\n                        </div>\n                        <div class=\"form-group\">\n                           <label for=\"price\">Price</label>\n                           <input type=\"text\" ngModel=\"{{editProduct?.price}}\" name=\"price\" class=\"form-control\" id=\"price\" placeholder=\"Price\" required>\n                        </div>\n                        <div class=\"form-group\">\n                           <label for=\"description\">Description</label>\n                           <input type=\"text\" ngModel=\"{{editProduct?.description}}\" name=\"description\" class=\"form-control\" id=\"description\" placeholder=\"Description\" required>\n                        </div>\n                        <div class=\"form-group\">\n                           <label for=\"color\">Color</label>\n                           <input type=\"text\" ngModel=\"{{editProduct?.color}}\" name=\"color\" class=\"form-control\" id=\"color\" placeholder=\"Color\" required>\n                        </div>\n                        <div class=\"modal-footer\">\n                           <button type=\"button\" id=\"\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                           <button (click)=\"onUpdateProduct(editForm.value)\" type=\"submit\" class=\"btn btn-primary\" >Save changes</button>\n                        </div>\n                     </form>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div class=\"modal fade\" id=\"deleteProductModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModelLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n               <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                     <h5 class=\"modal-title\" id=\"deleteModelLabel\">Delete Product</h5>\n                     <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                     <span aria-hidden=\"true\">&times;</span>\n                     </button>\n                  </div>\n                  <div class=\"modal-body\">\n                     <p>Are you sure you want to delete product {{deleteProduct?.name}}?</p>\n                     <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n                        <button (click)=\"onDeleteProduct(deleteProduct?.id)\" class=\"btn btn-danger\" data-dismiss=\"modal\">Yes</button>\n                     </div>\n                  </div>\n                \n               </div>\n            </div>\n          </div>\n\n          <div class=\"modal fade\" id=\"statisticalReportModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"statisticalProductModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n               <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                     <h5 class=\"modal-title\" id=\"statisticalProductModalLabel\">Products ordered by the average of their likes </h5>\n   \n                     <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                     <span aria-hidden=\"true\">&times;</span>\n                     </button>\n                  </div>\n   \n                  <div class=\"modal-body\">\n                     <form #editForm=\"ngForm\">\n                        <div *ngFor=\"let product of stats\">\n                           <p>{{product.id}}. {{product.name}} : {{product.likes}} </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                           <button type=\"button\" id=\"\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                     </form>\n                  </div>\n               </div>\n            </div>\n           </div> \n           \n           \n           <div class=\"pg\">\n\n            <div>\n               <button (click)=\"changePage(this.currentPage + 1)\" class=\"paginations\"> Next </button>\n            </div>\n            <div *ngIf=\"this.currentPage > 1\"  class=\"col-lg-12 col-md-12 col-xl-12\"> <button (click)=\"changePage(this.currentPage - 1)\" class=\"paginations\"> Prev </button></div>\n            </div>   \n\n          <div *ngIf=\"products?.length == 0\" class=\"col-lg-12 col-md-12 col-xl-12\">\n            <div class=\"alert alert-info\" role=\"alert\">\n               <h4 class=\"alert-heading\">NO PRODUCTS!</h4>\n               <p>No products were found.</p>\n            </div>\n          </div> -->\n\n\n\n\n<!-- \n    </div>\n</div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}