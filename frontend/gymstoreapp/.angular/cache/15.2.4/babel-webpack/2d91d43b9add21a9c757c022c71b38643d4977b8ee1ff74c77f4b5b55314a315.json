{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:80';\n  }\n  getAllProducts() {\n    return this.http.get(`${this.apiServerUrl}/product/all`);\n  }\n  getProduct(productId) {\n    return this.http.get(`${this.apiServerUrl}/product/${productId}`);\n  }\n  addProduct(product) {\n    return this.http.post(`${this.apiServerUrl}/product/`, product);\n  }\n  updateProduct(product) {\n    return this.http.put(`${this.apiServerUrl}/product/`, product);\n  }\n  deleteProduct(productId) {\n    return this.http.delete(`${this.apiServerUrl}/product/${productId}`);\n  }\n  filterProductsByPrice(price) {\n    return this.http.get(`${this.apiServerUrl}/product/filter/${price}`);\n  }\n  getStatisticalReportProduct() {\n    return this.http.get(`${this.apiServerUrl}/review/statProd`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFhB,iBAAY,GAAG,qBAAqB;EAEH;EAElCC,cAAc;IACnB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,YAAY,cAAc,CAAC;EACrE;EAEOC,UAAU,CAACC,SAAkB;IAClC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,YAAY,YAAYE,SAAS,EAAE,CAAC;EAC5E;EAEOC,UAAU,CAACC,OAAiB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,GAAG,IAAI,CAACL,YAAY,WAAW,EAAEI,OAAO,CAAC;EAC1E;EAEOE,aAAa,CAACF,OAAiB;IACpC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACP,YAAY,WAAW,EAAEI,OAAO,CAAC;EACzE;EAEOI,aAAa,CAACN,SAAkB;IACrC,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACT,YAAY,YAAYE,SAAS,EAAE,CAAC;EAC5E;EAEOQ,qBAAqB,CAACC,KAAc;IACzC,OAAO,IAAI,CAACd,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,YAAY,mBAAmBW,KAAK,EAAE,CAAC;EACjF;EAEOC,2BAA2B;IAChC,OAAO,IAAI,CAACf,IAAI,CAACE,GAAG,CAAkD,GAAG,IAAI,CAACC,YAAY,kBAAkB,CAAC;EAC/G;;AA/BWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YADD;AAAM","names":["ProductService","constructor","http","getAllProducts","get","apiServerUrl","getProduct","productId","addProduct","product","post","updateProduct","put","deleteProduct","delete","filterProductsByPrice","price","getStatisticalReportProduct","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { Product } from './product';\r\nimport { Entry } from './Entry';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class ProductService {\r\n  private apiServerUrl = 'http://localhost:80';\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  public getAllProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiServerUrl}/product/all`);\r\n  }\r\n\r\n  public getProduct(productId : number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiServerUrl}/product/${productId}`);\r\n  }\r\n\r\n  public addProduct(product : Product): Observable<Product> {\r\n    return this.http.post<Product>(`${this.apiServerUrl}/product/`, product);\r\n  }\r\n\r\n  public updateProduct(product : Product ): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiServerUrl}/product/`, product);\r\n  }\r\n\r\n  public deleteProduct(productId : number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiServerUrl}/product/${productId}`);\r\n  }\r\n\r\n  public filterProductsByPrice(price : number) : Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiServerUrl}/product/filter/${price}`);\r\n  }\r\n\r\n  public getStatisticalReportProduct() : Observable<{id : number, name: string, likes  : number }[]> {\r\n    return this.http.get<{id : number, name: string, likes  : number }[]>(`${this.apiServerUrl}/review/statProd`);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}