{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    //private apiServerUrl = 'http://104.197.134.216:80';\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getAllProducts(pageNumber, pageSize) {\n    return this.http.get(`${this.apiServerUrl}/product/all` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n  }\n  getProduct(productId) {\n    return this.http.get(`${this.apiServerUrl}/product/${productId}`);\n  }\n  addProduct(product) {\n    return this.http.post(`${this.apiServerUrl}/product/`, product);\n  }\n  updateProduct(product) {\n    return this.http.put(`${this.apiServerUrl}/product/`, product);\n  }\n  deleteProduct(productId) {\n    return this.http.delete(`${this.apiServerUrl}/product/${productId}`);\n  }\n  filterProductsByPrice(price, pageNumber, pageSize) {\n    return this.http.get(`${this.apiServerUrl}/product/filter/${price}` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n  }\n  getStatisticalReportProduct(pageNumber, pageSize) {\n    return this.http.get(`${this.apiServerUrl}/review/statProd` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAASA,WAAW,QAAQ,8BAA8B;;;AAG1D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAHxB;IACQ,iBAAY,GAAGH,WAAW,CAACI,UAAU;EAEJ;EAElCC,cAAc,CAACC,UAAkB,EAAEC,QAAiB;IACzD,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAA0B,GAAG,IAAI,CAACC,YAAY,cAAc,GAAG,eAAeH,UAAU,EAAE,GAAG,aAAa,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC7I;EAEOG,UAAU,CAACC,SAAkB;IAClC,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACC,YAAY,YAAYE,SAAS,EAAE,CAAC;EAC5E;EAEOC,UAAU,CAACC,OAAiB;IACjC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAU,GAAG,IAAI,CAACL,YAAY,WAAW,EAAEI,OAAO,CAAC;EAC1E;EAEOE,aAAa,CAACF,OAAiB;IACpC,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAU,GAAG,IAAI,CAACP,YAAY,WAAW,EAAEI,OAAO,CAAC;EACzE;EAEOI,aAAa,CAACN,SAAkB;IACrC,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACT,YAAY,YAAYE,SAAS,EAAE,CAAC;EAC5E;EAEOQ,qBAAqB,CAACC,KAAc,EAAEd,UAAmB,EAAEC,QAAiB;IACjF,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAA0B,GAAG,IAAI,CAACC,YAAY,mBAAmBW,KAAK,EAAE,GAAG,eAAed,UAAU,EAAE,GAAI,aAAa,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1J;EAEOc,2BAA2B,CAACf,UAAmB,EAAEC,QAAiB;IACvE,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAgE,GAAG,IAAI,CAACC,YAAY,kBAAkB,GAAG,eAAeH,UAAU,EAAE,GAAG,aAAa,CAACC,QAAQ,CAAC,EAAE,CAAC;EACvL;;AAhCWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAqB,SAAdrB,cAAc;EAAAsB,YADD;AAAM","names":["environment","ProductService","constructor","http","apiBaseUrl","getAllProducts","pageNumber","pageSize","get","apiServerUrl","getProduct","productId","addProduct","product","post","updateProduct","put","deleteProduct","delete","filterProductsByPrice","price","getStatisticalReportProduct","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rasni\\Desktop\\A2\\frontend\\gymstoreapp\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { Product } from '../model/product';\r\nimport { Entry } from '../model/Entry';\r\nimport { GenericPageDTO } from '../model/genericPageDTO';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class ProductService {\r\n  //private apiServerUrl = 'http://104.197.134.216:80';\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  public getAllProducts(pageNumber: number, pageSize : number): Observable<GenericPageDTO<Product>> {\r\n    return this.http.get<GenericPageDTO<Product>>(`${this.apiServerUrl}/product/all` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\r\n  }\r\n\r\n  public getProduct(productId : number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiServerUrl}/product/${productId}`);\r\n  }\r\n\r\n  public addProduct(product : Product): Observable<Product> {\r\n    return this.http.post<Product>(`${this.apiServerUrl}/product/`, product);\r\n  }\r\n\r\n  public updateProduct(product : Product ): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiServerUrl}/product/`, product);\r\n  }\r\n\r\n  public deleteProduct(productId : number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiServerUrl}/product/${productId}`);\r\n  }\r\n\r\n  public filterProductsByPrice(price : number, pageNumber : number, pageSize : number) : Observable<GenericPageDTO<Product>> {\r\n    return this.http.get<GenericPageDTO<Product>>(`${this.apiServerUrl}/product/filter/${price}` + `?pageNumber=${pageNumber}` +  `&pageSize=${[pageSize]}`);\r\n  }\r\n\r\n  public getStatisticalReportProduct(pageNumber : number, pageSize : number) : Observable<GenericPageDTO<{id : number, name: string, likes  : number }>> {\r\n    return this.http.get<GenericPageDTO<{id : number, name: string, likes  : number }>>(`${this.apiServerUrl}/review/statProd` + `?pageNumber=${pageNumber}`+  `&pageSize=${[pageSize]}`);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}