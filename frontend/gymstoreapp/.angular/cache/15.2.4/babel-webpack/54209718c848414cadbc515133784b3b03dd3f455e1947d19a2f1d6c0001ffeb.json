{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      //private apiServerUrl = 'http://104.197.134.216:80';\n      this.apiServerUrl = environment.apiBaseUrl;\n    }\n    getAllProducts(pageNumber, pageSize) {\n      return this.http.get(`${this.apiServerUrl}/product/all` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n    }\n    getProduct(productId) {\n      return this.http.get(`${this.apiServerUrl}/product/${productId}`);\n    }\n    addProduct(product) {\n      return this.http.post(`${this.apiServerUrl}/product/`, product);\n    }\n    updateProduct(product) {\n      return this.http.put(`${this.apiServerUrl}/product/`, product);\n    }\n    deleteProduct(productId) {\n      return this.http.delete(`${this.apiServerUrl}/product/${productId}`);\n    }\n    filterProductsByPrice(price, pageNumber, pageSize) {\n      return this.http.get(`${this.apiServerUrl}/product/filter/${price}` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n    }\n    getStatisticalReportProduct(pageNumber, pageSize) {\n      return this.http.get(`${this.apiServerUrl}/review/statProd` + `?pageNumber=${pageNumber}` + `&pageSize=${[pageSize]}`);\n    }\n  }\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}